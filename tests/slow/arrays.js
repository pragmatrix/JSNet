var dummy_array = [ 1, ];
var bogus_extra_length = dummy_array.length - 1;

var g_aaiTaskCPU = [
	[0, 18212.39, 18212.39, 18212.39, 18212.39, 36424.78, 36424.78, 36424.78, 36424.78, 54637.16, 54637.16, 54637.16, 54637.16, 72849.55, 72849.55, 72849.55, 72849.55, 91061.94, 91061.94, 91061.94, 91061.94, 109274.33, 109274.33, 109274.33, 109274.33, 127486.72, 127486.72, 127486.72, 127486.72, 145699.1, 145699.1, 145699.1, 145699.1, 163911.49, 163911.49, 163911.49, 163911.49, 182123.88, 182123.88, 182123.88, 182123.88, 200336.27, 200336.27, 200336.27, 200336.27, 218548.66, 218548.66, 218548.66, 218548.66, 236761.05, 236761.05, 236761.05, 236761.05, 254973.43, 254973.43, 254973.43, 254973.43, 273185.82, 273185.82, 273185.82, 273185.82, 291398.21, 291398.21, 291398.21, 291398.21, ],
	[0, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, 819, ],
	[0, 6317.92, 6317.92, 6317.92, 6317.92, 12635.85, 12635.85, 12635.85, 12635.85, 18953.77, 18953.77, 18953.77, 18953.77, 25271.69, 25271.69, 25271.69, 25271.69, 31589.61, 31589.61, 31589.61, 31589.61, 37907.54, 37907.54, 37907.54, 37907.54, 44225.46, 44225.46, 44225.46, 44225.46, 50543.38, 50543.38, 50543.38, 50543.38, 56861.3, 56861.3, 56861.3, 56861.3, 63179.23, 63179.23, 63179.23, 63179.23, 69497.15, 69497.15, 69497.15, 69497.15, 75815.07, 75815.07, 75815.07, 75815.07, 82132.99, 82132.99, 82132.99, 82132.99, 88450.92, 88450.92, 88450.92, 88450.92, 94768.84, 94768.84, 94768.84, 94768.84, 101086.76, 101086.76, 101086.76, 101086.76, ],
	[0, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, 50000, ],
	[0, 785.28, 785.28, 785.28, 785.28, 1570.56, 1570.56, 1570.56, 1570.56, 2355.84, 2355.84, 2355.84, 2355.84, 3141.12, 3141.12, 3141.12, 3141.12, 3926.4, 3926.4, 3926.4, 3926.4, 4711.68, 4711.68, 4711.68, 4711.68, 5496.96, 5496.96, 5496.96, 5496.96, 6282.24, 6282.24, 6282.24, 6282.24, 7067.52, 7067.52, 7067.52, 7067.52, 7852.8, 7852.8, 7852.8, 7852.8, 8638.08, 8638.08, 8638.08, 8638.08, 9423.36, 9423.36, 9423.36, 9423.36, 10208.64, 10208.64, 10208.64, 10208.64, 10993.92, 10993.92, 10993.92, 10993.92, 11779.2, 11779.2, 11779.2, 11779.2, 12564.48, 12564.48, 12564.48, 12564.48, ],
	[0, -5054.19421875, -3790.4684375, -2526.74265625001, -1263.016875, -6317.22109375, -5053.49531250001, -3789.76953125001, -2526.04375000001, -7580.23796875, -6316.5121875, -5052.78640625, -3789.06062500002, -8843.25484375002, -7579.52906250002, -6315.80328125, -5052.07750000001, -10106.27171875, -8842.54593750001, -7578.82015625002, -6315.094375, -11369.29859375, -10105.5728125, -8841.84703125001, -7578.12125000005, -12632.31546875, -11368.5896875, -10104.86390625, -8841.13812500003, -13895.33234375, -12631.6065625, -11367.88078125, -10104.155, -15158.34921875, -13894.6234375, -12630.8976562501, -11367.171875, -16421.37609375, -15157.6503125, -13893.92453125, -12630.19875, -17684.3929687501, -16420.6671875, -15156.94140625, -13893.215625, -18947.4098437501, -17683.6840625, -16419.95828125, -15156.2325000001, -20210.4267187501, -18946.7009375, -17682.97515625, -16419.2493750001, -21473.4535937501, -20209.7278125, -18946.00203125, -17682.2762500001, -22736.4704687501, -21472.7446875, -20209.01890625, -18945.293125, -23999.4873437501, -22735.7615625, -21472.03578125, -20208.31, ],
];

var g_resourcenames = [
	"Block 0 memory",
	"Block 1 memory",
	"External memory",
	"Input timeslots",
	"Output timeslots",
	"CPU time",
];
g_resourcenames.length -= bogus_extra_length;

var g_aiFeature = [
	new Feature("Play from rate 8000", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-outc */, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 1 /* file-outchan */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies normal sampling rate for a play format"),
	new Feature("Play from rate 6000", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-6to8 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-outc */, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 1 /* file-outchan */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-sixkout */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a compressed sampling rate for a play format"),
	new Feature("Play from rate 11000", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-1to8 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-outc */, 0, 1 /* task-task0 */, 0, 0, 1 /* file-11_to_8 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 1 /* file-outchan */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a popular PC sampling rate for a play format"),
	new Feature("Play A-law", [0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-plal */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 1 /* file-playA */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a play format used with a play rate"),
	new Feature("Play mu-law", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-plml */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-playmu */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a play format used with a play rate"),
	new Feature("Play IMA ADPCM", [0, 0, 0, 0, 0, 0, 1 /* task-pima */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-playima */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a play format used with a play rate"),
	new Feature("Play OKI ADPCM", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-plok */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-playoki */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a play format used with a play rate"),
	new Feature("Play ACUBLK", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-plab */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 1 /* file-playablk */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a play format used with a play rate"),
	new Feature("Play 8-bit linear", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-pl8 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 1 /* file-play8b */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a play format used with a play rate"),
	new Feature("Play 8-bit unsigned linear", [1 /* task-plm8 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-playms8b */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a play format used with a play rate"),
	new Feature("Play 16-bit linear", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-pl16 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 1 /* file-play16b */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a play format used with a play rate"),
	new Feature("Slow play", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-slow */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-slow */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Used to modify one of the play entries above"),
	new Feature("Fast play", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-fast */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-fast */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Used to modify one of the play entries above"),
	new Feature("Play AGC/volume/background", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-gbgt */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-gainbg */, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Used to modify one of the play entries above"),
	new Feature("Tone generation", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-tgen */, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-tonegen */, 0, 0, 0, 0, 0, 0, 0, 0, ], ""),
	new Feature("Record to rate 8000", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-inc */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-inchan */, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies normal sampling rate for a record format"),
	new Feature("Record to rate 6000", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-8to6 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-inc */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-inchan */, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-sixkin */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a compressed sampling rate for a record format"),
	new Feature("Record to rate 11000", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-8to1 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-inc */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 1 /* file-8_to_11 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-inchan */, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a popular PC sampling rate for a record format"),
	new Feature("Record A-law", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-real */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-recA */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a recording format used with a record rate"),
	new Feature("Record mu-law", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-reml */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-recmu */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a recording format used with a record rate"),
	new Feature("Record IMA ADPCM", [0, 0, 2 /* task-rima */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-recima */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a recording format used with a record rate"),
	new Feature("Record OKI ADPCM", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-reok */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-recoki */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a recording format used with a record rate"),
	new Feature("Record ACUBLK", [0, 0, 0, 2 /* task-reab */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-recablk */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a recording format used with a record rate"),
	new Feature("Record 8-bit linear", [0, 0, 0, 0, 0, 2 /* task-re8 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-rec8b */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a recording format used with a record rate"),
	new Feature("Record 8-bit unsigned linear", [0, 2 /* task-rem8 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-recms8b */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a recording format used with a record rate"),
	new Feature("Record 16-bit linear", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-re16 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-rec16b */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Specifies a recording format used with a record rate"),
	new Feature("Silence elimination", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-grnt */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-grunt */, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Used to remove silence from one of the above recordings"),
	new Feature("Tone/DTMF elimination", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-trep */, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-tdet */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* file-td */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Used to remove tones (e.g. DTMF) from one of the above recordings"),
	new Feature("Tone/DTMF elimination (as listen for)", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-trep */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-td */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Used to remove tones (e.g. DTMF) from one of the above recordings. Requires Tone/DTMF detection"),
	new Feature("Record AGC/volume", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-gbgr */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-gainbg */, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Used to modify one of the above recordings"),
	new Feature("Record terminated by time", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-tmor */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-timerx */, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Used to time one of the above recordings"),
	new Feature("Tone/DTMF detection", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3 /* task-trep */, 0, 0, 0, 0, 0, 0, 0, 0, 3 /* task-tdet */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3 /* task-inc */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-inchan */, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* file-td */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Used to detect tones (e.g. DTMF, call progress tones)"),
	new Feature("Grunt detection", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3 /* task-grnt */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3 /* task-inc */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-grunt */, 0, 0, 1 /* file-inchan */, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Detect whether there is silence or signal (grunt)"),
	new Feature("Live speaker detection", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3 /* task-lsd */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3 /* task-inc */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 1 /* file-ansdet */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-inchan */, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Distinguish between answering machine and live speaker"),
	new Feature("Conference participant", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-cin */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-cout */, 0, 0, 0, 4 /* task-cman */, 0, 2 /* task-inc */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 3 /* file-conf */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-inchan */, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Each instance of this call type is one of the parties in a conference"),
	new Feature("Echo cancellation", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-xpt */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-echo */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-echocan */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 1 /* file-passthru */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], ""),
	new Feature("V.110 receive", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-110r */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-v110 */, 0, 0, 0, 0, 0, 0, 0, ], "A self-contained data receiver"),
	new Feature("V.110 transmit", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-110t */, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-v110 */, 0, 0, 0, 0, 0, 0, 0, ], "A self-contained data transmitter"),
	new Feature("V.110 RLP receive", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-rlpr */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-v110rlpr */, 0, 0, 0, 0, 0, 0, ], "A self-contained data receiver"),
	new Feature("V.110 RLP transmit", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-rlpt */, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-v110rlpt */, 0, 0, 0, 0, 0, ], "A self-contained data transmitter"),
	new Feature("ASYNC decoder (except FSK)", [0, 0, 0, 0, 2 /* task-asyr */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 1 /* file-asyrx */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Decodes received data"),
	new Feature("ASYNC decoder (FSK only)", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-fasr */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-fskasyrx */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Decodes data received via FSK modem"),
	new Feature("ASYNC encoder", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-asyt */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 1 /* file-asytx */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Encodes data for transmission"),
	new Feature("SYNC decoder (except FSK)", [0, 0, 0, 0, 0, 0, 0, 2 /* task-sycr */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-syncrx */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Decodes received data"),
	new Feature("SYNC decoder (FSK only)", [0, 0, 0, 0, 0, 0, 0, 2 /* task-sycr */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-fspl */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-fskpll */, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-syncrx */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Decodes data received via FSK modem"),
	new Feature("SYNC encoder", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-syct */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-synctx */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Encodes data for transmission"),
	new Feature("HDLC decoder (except FSK)", [0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-hdlr */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-hdlcrx */, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Decodes received data"),
	new Feature("HDLC decoder (FSK only)", [0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-hdlr */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-fspl */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-fskpll */, 0, 0, 0, 0, 1 /* file-hdlcrx */, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Decodes data received via FSK modem"),
	new Feature("HDLC encoder", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-hdlt */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-hdlctx */, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Encodes data for transmission"),
	new Feature("digital data receive (not V.110)", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-rdat */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-datarx */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Receives digital data for decoding"),
	new Feature("digital data transmit (not V.110)", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-tdat */, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-datatx */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Transmits encoded digital data"),
	new Feature("FSK modulation", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-fskt */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-outc */, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-fsktx */, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 1 /* file-outchan */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Transmits encoded data via FSK modem (V.21, V.23, etc.)"),
	new Feature("FSK demodulation", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-fskr */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-inc */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-fskrx */, 0, 0, 0, 0, 0, 1 /* file-inchan */, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Receives data via FSK modem (V.21, V.23, etc.) for decoding"),
	new Feature("V.27ter modulation", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-v27t */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-6to5 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-outc */, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 1 /* file-outchan */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-six2five */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-v27tx */, 0, 0, ], "Transmits encoded data via V.27ter modem"),
	new Feature("V.27ter demodulation", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-v27r */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-inc */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-inchan */, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-v27rx */, 0, 0, 0, ], "Receives data via V.27ter modem for decoding"),
	new Feature("V.29 modulation", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-v29t */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-6to5 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-outc */, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 1 /* file-outchan */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-six2five */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-v29tx */, ], "Transmits encoded data via V.29 modem"),
	new Feature("V.29 demodulation", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-v29r */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2 /* task-inc */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-inchan */, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-v29rx */, 0, ], "Receives data via V.29 modem for decoding"),
	new Feature("V.17 modulation", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-v17t */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-6to5 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-outc */, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 1 /* file-outchan */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-six2five */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-v17tx */, 0, 0, 0, 0, ], "Transmits encoded data via V.17 modem"),
	new Feature("Use of prefix/suffix in data transmission", [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-psuf */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* task-task0 */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-kernel */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1 /* file-prefsuf */, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, ], "Adds special data pattern to encoded data before transmission"),
];
g_aiFeature.length -= bogus_extra_length;

var g_iChains = 4;

var g_exceptions = [
	[ [ 58, 45 ], 84 ], // echo, tdet -> ec-dtmf
	[ [ 47, 23 ], 85 ], // 6K, plab -> 6klabf
];
g_exceptions.length -= bogus_extra_length;

var g_aaiAlgExclClasses = [
	[0 /* out */], /* Play_from_rate_8000 */
	[0 /* out */], /* Play_from_rate_6000 */
	[0 /* out */], /* Play_from_rate_11000 */
	[1 /* playcode */], /* Play_A-law */
	[1 /* playcode */], /* Play_mu-law */
	[1 /* playcode */], /* Play_IMA_ADPCM */
	[1 /* playcode */], /* Play_OKI_ADPCM */
	[1 /* playcode */], /* Play_ACUBLK */
	[1 /* playcode */], /* Play_8-bit_linear */
	[1 /* playcode */], /* Play_8-bit_unsigned_linear */
	[1 /* playcode */], /* Play_16-bit_linear */
	[2 /* slowfast */], /* Slow_play */
	[2 /* slowfast */], /* Fast_play */
	[], /* Play_AGC/volume/background */
	[0 /* out */], /* Tone_generation */
	[3 /* in */], /* Record_to_rate_8000 */
	[3 /* in */], /* Record_to_rate_6000 */
	[3 /* in */], /* Record_to_rate_11000 */
	[4 /* reccode */], /* Record_A-law */
	[4 /* reccode */], /* Record_mu-law */
	[4 /* reccode */], /* Record_IMA_ADPCM */
	[4 /* reccode */], /* Record_OKI_ADPCM */
	[4 /* reccode */], /* Record_ACUBLK */
	[4 /* reccode */], /* Record_8-bit_linear */
	[4 /* reccode */], /* Record_8-bit_unsigned_linear */
	[4 /* reccode */], /* Record_16-bit_linear */
	[], /* Silence_elimination */
	[5 /* toneelim */], /* Tone/DTMF_elimination */
	[5 /* toneelim */], /* Tone/DTMF_elimination_(as_listen_for) */
	[], /* Record_AGC/volume */
	[], /* Record_terminated_by_time */
	[], /* Tone/DTMF_detection */
	[], /* Grunt_detection */
	[], /* Live_speaker_detection */
	[0 /* out */], /* Conference_participant */
	[6 /* datatx */], /* Echo_cancellation */
	[3 /* in */, 7 /* datarx */], /* V.110_receive */
	[0 /* out */], /* V.110_transmit */
	[3 /* in */, 7 /* datarx */], /* V.110_RLP_receive */
	[0 /* out */], /* V.110_RLP_transmit */
	[8 /* deco */], /* ASYNC_decoder_(except_FSK) */
	[8 /* deco */], /* ASYNC_decoder_(FSK_only) */
	[9 /* enco */], /* ASYNC_encoder */
	[8 /* deco */], /* SYNC_decoder_(except_FSK) */
	[8 /* deco */], /* SYNC_decoder_(FSK_only) */
	[9 /* enco */], /* SYNC_encoder */
	[8 /* deco */], /* HDLC_decoder_(except_FSK) */
	[8 /* deco */], /* HDLC_decoder_(FSK_only) */
	[9 /* enco */], /* HDLC_encoder */
	[3 /* in */, 7 /* datarx */], /* digital_data_receive_(not_V.110) */
	[0 /* out */], /* digital_data_transmit_(not_V.110) */
	[0 /* out */, 6 /* datatx */], /* FSK_modulation */
	[3 /* in */], /* FSK_demodulation */
	[0 /* out */, 6 /* datatx */], /* V.27ter_modulation */
	[3 /* in */], /* V.27ter_demodulation */
	[0 /* out */, 6 /* datatx */], /* V.29_modulation */
	[3 /* in */], /* V.29_demodulation */
	[0 /* out */, 6 /* datatx */], /* V.17_modulation */
	[], /* Use_of_prefix/suffix_in_data_transmission */
];
g_aaiAlgExclClasses.length -= bogus_extra_length;

var g_asAlgExclClassText = [
	"output", /* out */
	"play format", /* playcode */
	"slow or fast play", /* slowfast */
	"input", /* in */
	"recording format", /* reccode */
	"tone elimination", /* toneelim */
	"data transmitter", /* datatx */
	"data receiver", /* datarx */
	"data decoder", /* deco */
	"data encoder", /* enco */
];
g_asAlgExclClassText.length -= bogus_extra_length;

var g_aAlgDepends = [
	new AlgDepend("play format", [3, 4, 5, 6, 7, 8, 9, 10]), /* Play_from_rate_8000 */
	new AlgDepend("play format", [3, 4, 5, 6, 7, 8, 9, 10]), /* Play_from_rate_6000 */
	new AlgDepend("play format", [3, 4, 5, 6, 7, 8, 9, 10]), /* Play_from_rate_11000 */
	new AlgDepend("play rate", [0, 1, 2]), /* Play_A-law */
	new AlgDepend("play rate", [0, 1, 2]), /* Play_mu-law */
	new AlgDepend("play rate", [0, 1, 2]), /* Play_IMA_ADPCM */
	new AlgDepend("play rate", [0, 1, 2]), /* Play_OKI_ADPCM */
	new AlgDepend("play rate", [0, 1, 2]), /* Play_ACUBLK */
	new AlgDepend("play rate", [0, 1, 2]), /* Play_8-bit_linear */
	new AlgDepend("play rate", [0, 1, 2]), /* Play_8-bit_unsigned_linear */
	new AlgDepend("play rate", [0, 1, 2]), /* Play_16-bit_linear */
	new AlgDepend("play format", [3, 4, 5, 6, 7, 8, 9, 10]), /* Slow_play */
	new AlgDepend("play format", [3, 4, 5, 6, 7, 8, 9, 10]), /* Fast_play */
	new AlgDepend("play format", [3, 4, 5, 6, 7, 8, 9, 10]), /* Play_AGC/volume/background */
	0, /* Tone_generation */
	new AlgDepend("record format", [18, 19, 20, 21, 22, 23, 24, 25]), /* Record_to_rate_8000 */
	new AlgDepend("record format", [18, 19, 20, 21, 22, 23, 24, 25]), /* Record_to_rate_6000 */
	new AlgDepend("record format", [18, 19, 20, 21, 22, 23, 24, 25]), /* Record_to_rate_11000 */
	new AlgDepend("record rate", [15, 16, 17]), /* Record_A-law */
	new AlgDepend("record rate", [15, 16, 17]), /* Record_mu-law */
	new AlgDepend("record rate", [15, 16, 17]), /* Record_IMA_ADPCM */
	new AlgDepend("record rate", [15, 16, 17]), /* Record_OKI_ADPCM */
	new AlgDepend("record rate", [15, 16, 17]), /* Record_ACUBLK */
	new AlgDepend("record rate", [15, 16, 17]), /* Record_8-bit_linear */
	new AlgDepend("record rate", [15, 16, 17]), /* Record_8-bit_unsigned_linear */
	new AlgDepend("record rate", [15, 16, 17]), /* Record_16-bit_linear */
	new AlgDepend("record format", [18, 19, 20, 21, 22, 23, 24, 25]), /* Silence_elimination */
	new AlgDepend("record format", [18, 19, 20, 21, 22, 23, 24, 25]), /* Tone/DTMF_elimination */
	new AlgDepend("record format", [18, 19, 20, 21, 22, 23, 24, 25]), /* Tone/DTMF_elimination_(as_listen_for) */
	new AlgDepend("record format", [18, 19, 20, 21, 22, 23, 24, 25]), /* Record_AGC/volume */
	new AlgDepend("record format", [18, 19, 20, 21, 22, 23, 24, 25]), /* Record_terminated_by_time */
	0, /* Tone/DTMF_detection */
	0, /* Grunt_detection */
	0, /* Live_speaker_detection */
	0, /* Conference_participant */
	0, /* Echo_cancellation */
	0, /* V.110_receive */
	0, /* V.110_transmit */
	0, /* V.110_RLP_receive */
	0, /* V.110_RLP_transmit */
	new AlgDepend("data receive (not FSK)", [49, 54, 56]), /* ASYNC_decoder_(except_FSK) */
	new AlgDepend("FSK demodulation", [52]), /* ASYNC_decoder_(FSK_only) */
	new AlgDepend("data transmit", [50, 51, 53, 55, 57]), /* ASYNC_encoder */
	new AlgDepend("data receive (not FSK)", [49, 54, 56]), /* SYNC_decoder_(except_FSK) */
	new AlgDepend("FSK demodulation", [52]), /* SYNC_decoder_(FSK_only) */
	new AlgDepend("data transmit", [50, 51, 53, 55, 57]), /* SYNC_encoder */
	new AlgDepend("data receive (not FSK)", [49, 54, 56]), /* HDLC_decoder_(except_FSK) */
	new AlgDepend("FSK demodulation", [52]), /* HDLC_decoder_(FSK_only) */
	new AlgDepend("data transmit", [50, 51, 53, 55, 57]), /* HDLC_encoder */
	new AlgDepend("rx decoding", [40, 41, 43, 44, 46, 47]), /* digital_data_receive_(not_V.110) */
	new AlgDepend("tx encoding", [42, 45, 48]), /* digital_data_transmit_(not_V.110) */
	new AlgDepend("tx encoding", [42, 45, 48]), /* FSK_modulation */
	new AlgDepend("rx decoding", [40, 41, 43, 44, 46, 47]), /* FSK_demodulation */
	new AlgDepend("tx encoding", [42, 45, 48]), /* V.27ter_modulation */
	new AlgDepend("rx decoding", [40, 41, 43, 44, 46, 47]), /* V.27ter_demodulation */
	new AlgDepend("tx encoding", [42, 45, 48]), /* V.29_modulation */
	new AlgDepend("rx decoding", [40, 41, 43, 44, 46, 47]), /* V.29_demodulation */
	new AlgDepend("tx encoding", [42, 45, 48]), /* V.17_modulation */
	new AlgDepend("data transmit", [50, 51, 53, 55, 57]), /* Use_of_prefix/suffix_in_data_transmission */
];
g_aAlgDepends.length -= bogus_extra_length;

var g_aiTask = [
	new Task([0, 32, 4096, 0, 0, 321.2759375, ], [0, 0, 0, 0, 0, 0, ], "task-plm8", 1),	// task-plm8
	new Task([0, 64, 4096, 0, 0, 672.1253125, ], [0, 0, 0, 0, 0, 0, ], "task-rem8", 1),	// task-rem8
	new Task([256, 64, 4096, 0, 0, 1707.57421875, ], [0, 0, 0, 0, 0, 0, ], "task-rima", 1),	// task-rima
	new Task([1040, 128, 4096, 0, 0, -1, ], [0, 0, 0, 0, 0, 0, ], "task-reab", 1),	// task-reab
	new Task([0, 32, 0, 0, 0, 1355.90921875, ], [0, 0, 0, 0, 0, 0, ], "task-asyr", 1),	// task-asyr
	new Task([0, 64, 4096, 0, 0, 508.17875, ], [0, 0, 0, 0, 0, 0, ], "task-re8", 1),	// task-re8
	new Task([0, 32, 4096, 0, 0, 936.2946875, ], [0, 0, 0, 0, 0, 0, ], "task-pima", 1),	// task-pima
	new Task([0, 16, 0, 0, 0, 1157.308125, ], [0, 0, 0, 0, 0, 0, ], "task-sycr", 1),	// task-sycr
	new Task([0, 32, 4096, 0, 0, 835.5253125, ], [0, 0, 0, 0, 0, 0, ], "task-plal", 1),	// task-plal
	new Task([0, 64, 4096, 0, 0, 1476.43875, ], [0, 2048, 0, 0, 0, 0, ], "task-hdlr", 1),	// task-hdlr
	new Task([0, 64, 4096, 0, 0, 699.6425, ], [0, 0, 0, 0, 0, 0, ], "task-reml", 1),	// task-reml
	new Task([0, 64, 4096, 0, 0, 1278.8346875, ], [0, 0, 0, 0, 0, 0, ], "task-reok", 1),	// task-reok
	new Task([0, 32, 4096, 0, 0, 319.28953125, ], [0, 0, 0, 0, 0, 0, ], "task-pl16", 1),	// task-pl16
	new Task([0, 32, 4096, 0, 0, 585.47453125, ], [0, 0, 0, 0, 0, 0, ], "task-plml", 1),	// task-plml
	new Task([0, 32, 4096, 0, 0, 442.7315625, ], [0, 0, 0, 0, 0, 0, ], "task-pl8", 1),	// task-pl8
	new Task([0, 64, 4096, 0, 0, 420.4625, ], [0, 0, 0, 0, 0, 0, ], "task-re16", 1),	// task-re16
	new Task([0, 64, 0, 0, 0, 281.60703125, ], [0, 0, 0, 0, 0, 0, ], "task-asyt", 1),	// task-asyt
	new Task([0, 2048, 4096, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-plc8", 1),	// task-plc8
	new Task([0, 16, 4096, 0, 0, 238.1065625, ], [0, 0, 0, 0, 0, 0, ], "task-syct", 1),	// task-syct
	new Task([0, 64, 4096, 0, 0, 896.01515625, ], [0, 0, 0, 0, 0, 0, ], "task-real", 1),	// task-real
	new Task([0, 64, 4096, 0, 0, 378.18359375, ], [0, 2048, 0, 0, 0, 0, ], "task-hdlt", 1),	// task-hdlt
	new Task([0, 32, 4096, 0, 0, 974.3315625, ], [0, 0, 0, 0, 0, 0, ], "task-plok", 1),	// task-plok
	new Task([0, 0, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-re32", 1),	// task-re32
	new Task([1024, 256, 4096, 0, 0, 704.61875, ], [0, 0, 0, 0, 0, 0, ], "task-plab", 1),	// task-plab
	new Task([0, 0, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-cvot", 1),	// task-cvot
	new Task([0, 32, 0, 0, 1, 0, ], [0, 0, 0, 0, 0, 0, ], "task-xpt", 1),	// task-xpt
	new Task([0, 64, 0, 0, 0, 423.36859375, ], [0, 0, 0, 0, 0, 0, ], "task-gbgr", 1),	// task-gbgr
	new Task([0, 128, 0, 0, 0, 1986.02671875, ], [0, 0, 0, 0, 0, 0, ], "task-fasr", 1),	// task-fasr
	new Task([0, 0, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-cvin", 1),	// task-cvin
	new Task([0, 128, 0, 0, 0, 1309.27453125, ], [0, 0, 0, 0, 0, 0, ], "task-8to6", 0.75),	// task-8to6
	new Task([0, 1024, 0, 0, 0, 3657.6165625, ], [0, 0, 0, 0, 0, 0, ], "task-8to1", 1.375),	// task-8to1
	new Task([0, 128, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-cin", 1),	// task-cin
	new Task([0, 64, 0, 0, 0, 453.7390625, ], [0, 0, 0, 0, 0, 0, ], "task-psuf", 1),	// task-psuf
	new Task([0, 1024, 0, 0, 0, 2403.6609375, ], [0, 0, 0, 0, 0, 0, ], "task-fast", 2),	// task-fast
	new Task([0, 64, 0, 0, 0, 1000, ], [0, 0, 0, 0, 0, 0, ], "task-fspl", 1),	// task-fspl
	new Task([80, 128, 20480, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-iwr", 1),	// task-iwr
	new Task([128, 64, 0, 0, 0, -5, ], [0, 0, 0, 0, 0, 0, ], "task-trep", 1),	// task-trep
	new Task([0, 128, 0, 0, 0, 5095.13125, ], [0, 0, 0, 0, 0, 0, ], "task-v27t", 1),	// task-v27t
	new Task([0, 0, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-xpo", 1),	// task-xpo
	new Task([0, 512, 0, 0, 0, 13146.865, ], [0, 0, 0, 0, 0, 0, ], "task-v27r", 1),	// task-v27r
	new Task([0, 0, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-xpi", 1),	// task-xpi
	new Task([0, 512, 0, 0, 0, 23186.85078125, ], [0, 0, 0, 0, 0, 0, ], "task-v29r", 1),	// task-v29r
	new Task([0, 128, 0, 0, 0, 6387.02875, ], [0, 0, 0, 0, 0, 0, ], "task-v17t", 1),	// task-v17t
	new Task([0, 128, 0, 0, 0, 3873.3103125, ], [0, 0, 0, 0, 0, 0, ], "task-fskr", 1),	// task-fskr
	new Task([0, 128, 0, 0, 0, 5161.2184375, ], [0, 0, 0, 0, 0, 0, ], "task-v29t", 1),	// task-v29t
	new Task([0, 640, 0, 0, 0, -3, ], [0, 0, 0, 0, 0, 0, ], "task-tdet", 1),	// task-tdet
	new Task([0, 64, 0, 0, 0, 722.674375, ], [0, 0, 0, 0, 0, 0, ], "task-fskt", 1),	// task-fskt
	new Task([0, 128, 0, 0, 0, 1233.399375, ], [0, 0, 0, 0, 0, 0, ], "task-6to8", 0.75),	// task-6to8
	new Task([0, 1024, 0, 0, 0, 4880.14484375, ], [0, 0, 0, 0, 0, 0, ], "task-1to8", 1.375),	// task-1to8
	new Task([0, 64, 0, 0, 0, 903.58546875, ], [0, 0, 0, 0, 0, 0, ], "task-cwtx", 1),	// task-cwtx
	new Task([0, 64, 0, 0, 0, 3266.30734375, ], [0, 0, 0, 0, 0, 0, ], "task-cwrx", 1),	// task-cwrx
	new Task([0, 256, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-lsdt", 1),	// task-lsdt
	new Task([0, 256, 0, 0, 0, 930.5915625, ], [0, 0, 0, 0, 0, 0, ], "task-lsd", 1),	// task-lsd
	new Task([0, 2048, 0, 0, 0, 3545.87078125, ], [0, 0, 0, 0, 0, 0, ], "task-slow", 0.5),	// task-slow
	new Task([0, 128, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-6to5", 1),	// task-6to5
	new Task([0, 64, 0, 0, 0, 410.954375, ], [0, 0, 0, 0, 0, 0, ], "task-grnt", 1),	// task-grnt
	new Task([0, 32, 0, 0, 0, 11.664375, ], [0, 0, 0, 0, 0, 0, ], "task-tmor", 1),	// task-tmor
	new Task([0, 64, 0, 0, 0, 419.67015625, ], [0, 0, 0, 0, 0, 0, ], "task-gbgt", 1),	// task-gbgt
	new Task([0, 512, 2048, 1, 0, 9224.27546875, ], [0, 0, 0, 0, 0, 0, ], "task-echo", 1),	// task-echo
	new Task([0, 0, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-safe", 1),	// task-safe
	new Task([0, 64, 0, 0, 0, 59, ], [0, 0, 0, 0, 0, 0, ], "task-cpum", 1),	// task-cpum
	new Task([0, 128, 0, 0, 1, 1494.32375, ], [0, 0, 0, 0, 0, 0, ], "task-cout", 1),	// task-cout
	new Task([0, 128, 4096, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-iwrm", 1),	// task-iwrm
	new Task([0, 0, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-sync", 1),	// task-sync
	new Task([304, 64, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-tpar", 1),	// task-tpar
	new Task([0, 512, 0, 0, 0, -2, ], [0, 0, 0, 0, 0, 0, ], "task-cman", 1),	// task-cman
	new Task([0, 128, 4096, 1, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-110r", 1),	// task-110r
	new Task([0, 64, 0, 1, 0, 228.8046875, ], [0, 0, 0, 0, 0, 0, ], "task-inc", 1),	// task-inc
	new Task([0, 0, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-ecgn", 1),	// task-ecgn
	new Task([0, 128, 4096, 1, 0, 2407.77921875, ], [0, 0, 0, 0, 0, 0, ], "task-rlpr", 1),	// task-rlpr
	new Task([0, 0, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-ects", 1),	// task-ects
	new Task([0, 0, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-blkr", 1),	// task-blkr
	new Task([0, 64, 4096, 1, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-r64", 1),	// task-r64
	new Task([0, 128, 0, 1, 0, 1476.43875, ], [0, 0, 0, 0, 0, 0, ], "task-rdat", 1),	// task-rdat
	new Task([0, 128, 4096, 0, 1, 3214.62328125, ], [0, 0, 0, 0, 0, 0, ], "task-rlpt", 1),	// task-rlpt
	new Task([0, 128, 4096, 0, 1, 385.63640625, ], [0, 0, 0, 0, 0, 0, ], "task-tgen", 1),	// task-tgen
	new Task([0, 128, 0, 0, 1, 126.06125, ], [0, 0, 0, 0, 0, 0, ], "task-tdat", 1),	// task-tdat
	new Task([0, 128, 4096, 0, 1, 6005.0615625, ], [0, 0, 0, 0, 0, 0, ], "task-110t", 1),	// task-110t
	new Task([0, 0, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-pfix", 1),	// task-pfix
	new Task([0, 64, 4096, 0, 1, 0, ], [0, 0, 0, 0, 0, 0, ], "task-p64", 1),	// task-p64
	new Task([0, 0, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-psil", 1),	// task-psil
	new Task([0, 80, 0, 0, 1, 218.62140625, ], [0, 0, 0, 0, 0, 0, ], "task-outc", 1),	// task-outc
	new Task([0, 64, 0, 1, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-ecmn", 1),	// task-ecmn
	new Task([0, 0, 0, 0, 0, 0, ], [0, 0, 0, 0, 0, 0, ], "task-task0", 1),	// task-task0
	new Task([0, 0, 0, 0, 0, -6, ], [0, 0, 0, 0, 0, 0, ], "task-ec-dtmf", 1),	// task-ec-dtmf
	new Task([0, 0, 0, 0, 0, -4, ], [0, 0, 0, 0, 0, 0, ], "task-6kblaf", 1),	// task-6kblaf
	new Task([0, 0, 0, 0, 0, 0, ], [622, 1024, 0, 0, 0, 0, ], "file-11_to_8", 1),	// file-11_to_8
	new Task([0, 0, 0, 0, 0, 0, ], [544, 1024, 0, 0, 0, 0, ], "file-8_to_11", 1),	// file-8_to_11
	new Task([0, 0, 0, 0, 0, 0, ], [1838, 0, 0, 0, 0, 0, ], "file-ansdet", 1),	// file-ansdet
	new Task([0, 0, 0, 0, 0, 0, ], [630, 0, 0, 0, 0, 0, ], "file-asyrx", 1),	// file-asyrx
	new Task([0, 0, 0, 0, 0, 0, ], [662, 0, 0, 0, 0, 0, ], "file-asytx", 1),	// file-asytx
	new Task([0, 0, 0, 0, 0, 0, ], [4096, 0, 0, 0, 0, 0, ], "file-conf", 1),	// file-conf
	new Task([0, 0, 0, 0, 0, 0, ], [200, 0, 0, 0, 0, 0, ], "file-cpumon", 1),	// file-cpumon
	new Task([0, 0, 0, 0, 0, 0, ], [540, 0, 0, 0, 0, 0, ], "file-cwrx", 1),	// file-cwrx
	new Task([0, 0, 0, 0, 0, 0, ], [964, 0, 0, 0, 0, 0, ], "file-cwtx", 1),	// file-cwtx
	new Task([0, 0, 0, 0, 0, 0, ], [506, 0, 0, 0, 0, 0, ], "file-datarx", 1),	// file-datarx
	new Task([0, 0, 0, 0, 0, 0, ], [680, 0, 0, 0, 0, 0, ], "file-datatx", 1),	// file-datatx
	new Task([0, 0, 0, 0, 0, 0, ], [6396, 256, 0, 0, 0, 0, ], "file-echocan", 1),	// file-echocan
	new Task([0, 0, 0, 0, 0, 0, ], [1548, 0, 0, 0, 0, 0, ], "file-fast", 1),	// file-fast
	new Task([0, 0, 0, 0, 0, 0, ], [1272, 0, 0, 0, 0, 0, ], "file-fskasyrx", 1),	// file-fskasyrx
	new Task([0, 0, 0, 0, 0, 0, ], [1084, 0, 0, 0, 0, 0, ], "file-fskpll", 1),	// file-fskpll
	new Task([0, 0, 0, 0, 0, 0, ], [788, 0, 0, 0, 0, 0, ], "file-fskrx", 1),	// file-fskrx
	new Task([0, 0, 0, 0, 0, 0, ], [1188, 0, 0, 0, 0, 0, ], "file-fsktx", 1),	// file-fsktx
	new Task([0, 0, 0, 0, 0, 0, ], [984, 0, 0, 0, 0, 0, ], "file-gainbg", 1),	// file-gainbg
	new Task([0, 0, 0, 0, 0, 0, ], [1120, 0, 0, 0, 0, 0, ], "file-grunt", 1),	// file-grunt
	new Task([0, 0, 0, 0, 0, 0, ], [1678, 0, 0, 0, 0, 0, ], "file-hdlcrx", 1),	// file-hdlcrx
	new Task([0, 0, 0, 0, 0, 0, ], [1600, 0, 0, 0, 0, 0, ], "file-hdlctx", 1),	// file-hdlctx
	new Task([0, 0, 0, 0, 0, 0, ], [486, 0, 0, 0, 0, 0, ], "file-inchan", 1),	// file-inchan
	new Task([0, 0, 0, 0, 0, 0, ], [10850, 8192, 0, 0, 0, 0, ], "file-iwr", 1),	// file-iwr
	new Task([0, 0, 0, 0, 0, 0, ], [19568, 57520, 0, 0, 0, 120, ], "file-kernel", 1),	// file-kernel
	new Task([0, 0, 0, 0, 0, 0, ], [600, 0, 0, 0, 0, 0, ], "file-outchan", 1),	// file-outchan
	new Task([0, 0, 0, 0, 0, 0, ], [234, 0, 0, 0, 0, 0, ], "file-passthru", 1),	// file-passthru
	new Task([0, 0, 0, 0, 0, 0, ], [334, 0, 0, 0, 0, 0, ], "file-play16b", 1),	// file-play16b
	new Task([0, 0, 0, 0, 0, 0, ], [306, 0, 0, 0, 0, 0, ], "file-play64", 1),	// file-play64
	new Task([0, 0, 0, 0, 0, 0, ], [352, 0, 0, 0, 0, 0, ], "file-play8b", 1),	// file-play8b
	new Task([0, 0, 0, 0, 0, 0, ], [418, 0, 0, 0, 0, 0, ], "file-playA", 1),	// file-playA
	new Task([0, 0, 0, 0, 0, 0, ], [3296, 0, 0, 0, 0, 0, ], "file-playablk", 1),	// file-playablk
	new Task([0, 0, 0, 0, 0, 0, ], [9148, 0, 0, 0, 0, 0, ], "file-playacc", 1),	// file-playacc
	new Task([0, 0, 0, 0, 0, 0, ], [1092, 0, 0, 0, 0, 0, ], "file-playima", 1),	// file-playima
	new Task([0, 0, 0, 0, 0, 0, ], [370, 0, 0, 0, 0, 0, ], "file-playms8b", 1),	// file-playms8b
	new Task([0, 0, 0, 0, 0, 0, ], [388, 0, 0, 0, 0, 0, ], "file-playmu", 1),	// file-playmu
	new Task([0, 0, 0, 0, 0, 0, ], [848, 0, 0, 0, 0, 0, ], "file-playoki", 1),	// file-playoki
	new Task([0, 0, 0, 0, 0, 0, ], [836, 0, 0, 0, 0, 0, ], "file-prefsuf", 1),	// file-prefsuf
	new Task([0, 0, 0, 0, 0, 0, ], [304, 0, 0, 0, 0, 0, ], "file-rec16b", 1),	// file-rec16b
	new Task([0, 0, 0, 0, 0, 0, ], [280, 0, 0, 0, 0, 0, ], "file-rec64", 1),	// file-rec64
	new Task([0, 0, 0, 0, 0, 0, ], [310, 0, 0, 0, 0, 0, ], "file-rec8b", 1),	// file-rec8b
	new Task([0, 0, 0, 0, 0, 0, ], [370, 0, 0, 0, 0, 0, ], "file-recA", 1),	// file-recA
	new Task([0, 0, 0, 0, 0, 0, ], [3694, 0, 0, 0, 0, 0, ], "file-recablk", 1),	// file-recablk
	new Task([0, 0, 0, 0, 0, 0, ], [1288, 0, 0, 0, 0, 0, ], "file-recima", 1),	// file-recima
	new Task([0, 0, 0, 0, 0, 0, ], [322, 0, 0, 0, 0, 0, ], "file-recms8b", 1),	// file-recms8b
	new Task([0, 0, 0, 0, 0, 0, ], [340, 0, 0, 0, 0, 0, ], "file-recmu", 1),	// file-recmu
	new Task([0, 0, 0, 0, 0, 0, ], [930, 0, 0, 0, 0, 0, ], "file-recoki", 1),	// file-recoki
	new Task([0, 0, 0, 0, 0, 0, ], [1002, 256, 0, 0, 0, 0, ], "file-six2five", 1),	// file-six2five
	new Task([0, 0, 0, 0, 0, 0, ], [538, 256, 0, 0, 0, 0, ], "file-sixkin", 1),	// file-sixkin
	new Task([0, 0, 0, 0, 0, 0, ], [658, 256, 0, 0, 0, 0, ], "file-sixkout", 1),	// file-sixkout
	new Task([0, 0, 0, 0, 0, 0, ], [1656, 0, 0, 0, 0, 0, ], "file-slow", 1),	// file-slow
	new Task([0, 0, 0, 0, 0, 0, ], [202, 0, 0, 0, 0, 0, ], "file-syncrx", 1),	// file-syncrx
	new Task([0, 0, 0, 0, 0, 0, ], [208, 0, 0, 0, 0, 0, ], "file-synctx", 1),	// file-synctx
	new Task([0, 0, 0, 0, 0, 0, ], [8388, 1024, 0, 0, 0, 0, ], "file-td", 1),	// file-td
	new Task([0, 0, 0, 0, 0, 0, ], [192, 0, 0, 0, 0, 0, ], "file-timerx", 1),	// file-timerx
	new Task([0, 0, 0, 0, 0, 0, ], [876, 0, 0, 0, 0, 0, ], "file-tonegen", 1),	// file-tonegen
	new Task([0, 0, 0, 0, 0, 0, ], [26864, 0, 0, 0, 0, 0, ], "file-v110", 1),	// file-v110
	new Task([0, 0, 0, 0, 0, 0, ], [4070, 0, 0, 0, 0, 0, ], "file-v110rlpr", 1),	// file-v110rlpr
	new Task([0, 0, 0, 0, 0, 0, ], [2792, 0, 0, 0, 0, 0, ], "file-v110rlpt", 1),	// file-v110rlpt
	new Task([0, 0, 0, 0, 0, 0, ], [2574, 4096, 0, 0, 0, 0, ], "file-v17tx", 1),	// file-v17tx
	new Task([0, 0, 0, 0, 0, 0, ], [4098, 256, 0, 0, 0, 0, ], "file-v27rx", 1),	// file-v27rx
	new Task([0, 0, 0, 0, 0, 0, ], [2040, 256, 0, 0, 0, 0, ], "file-v27tx", 1),	// file-v27tx
	new Task([0, 0, 0, 0, 0, 0, ], [5142, 512, 0, 0, 0, 0, ], "file-v29rx", 1),	// file-v29rx
	new Task([0, 0, 0, 0, 0, 0, ], [1810, 512, 0, 0, 0, 0, ], "file-v29tx", 1),	// file-v29tx
];
g_aiTask.length -= bogus_extra_length;
g_iNumTaskEachs = 86;

var g_aiSharc = [
	new Sharc("21062+128Kw", [131072, 131072, 524288, 64, 64, 320000, ]),
	new Sharc("21062+256Kw", [131072, 131072, 1048576, 64, 64, 320000, ]),
	new Sharc("21062+1Mw", [131072, 131072, 4194304, 64, 64, 320000, ]),
	new Sharc("21060+128Kw", [262144, 262144, 524288, 64, 64, 320000, ]),
];
g_aiSharc.length -= bogus_extra_length;

var g_aSharcMemCombo = [
	new SharcMemCombo("Prosody PCI, SHARC on base card", 0),
	new SharcMemCombo("Prosody PCI, SHARC on AC6120 module", 0),
	new SharcMemCombo("Prosody PCI, SHARC on AC6122 module", 2),
	new SharcMemCombo("Prosody cPCI, SHARC on base card", 1),
];
g_aSharcMemCombo.length -= bogus_extra_length;

var g_UserTasksUnfilt = [
	new UserTask(
		"+Conferencing", [
			[
				34, // Conference_participant
				31, // Tone/DTMF_detection
			], 
		],
		"A party in a conference (with control available by DTMF)"
	),
	new UserTask(
		"-Conferencing", [
			[
				34, // Conference_participant
				31, // Tone/DTMF_detection
			], 
		],
		"A party in a conference (with control available by DTMF)"
	),
	new UserTask(
		"+Play with DTMF control", [
			[
				3, // Play_A-law
				0, // Play_from_rate_8000
				31, // Tone/DTMF_detection
			], 
		],
		"e.g. Information line, voting, etc..."
	),
	new UserTask(
		"-Play with DTMF control", [
			[
				4, // Play_mu-law
				0, // Play_from_rate_8000
				31, // Tone/DTMF_detection
			], 
		],
		"e.g. Information line, voting, etc..."
	),
	new UserTask(
		"+Play with speech recognition feed, barge-in and DTMF", [
			[
				3, // Play_A-law
				0, // Play_from_rate_8000
				18, // Record_A-law
				15, // Record_to_rate_8000
				31, // Tone/DTMF_detection
				35, // Echo_cancellation
			], 
		],
		"For interactive applications"
	),
	new UserTask(
		"-Play with speech recognition feed, barge-in and DTMF", [
			[
				4, // Play_mu-law
				0, // Play_from_rate_8000
				19, // Record_mu-law
				15, // Record_to_rate_8000
				31, // Tone/DTMF_detection
				35, // Echo_cancellation
			], 
		],
		"For interactive applications"
	),
	new UserTask(
		"+Play with speech recognition feed, DTMF, no barge-in", [
			[
				3, // Play_A-law
				0, // Play_from_rate_8000
				31, // Tone/DTMF_detection
			], [
				18, // Record_A-law
				15, // Record_to_rate_8000
				31, // Tone/DTMF_detection
			], 
		],
		"For interactive applications"
	),
	new UserTask(
		"-Play with speech recognition feed, DTMF, no barge-in", [
			[
				4, // Play_mu-law
				0, // Play_from_rate_8000
				31, // Tone/DTMF_detection
			], [
				19, // Record_mu-law
				15, // Record_to_rate_8000
				31, // Tone/DTMF_detection
			], 
		],
		"For interactive applications"
	),
	new UserTask(
		"+Voicemail with fast and slow replay", [
			[
				3, // Play_A-law
				0, // Play_from_rate_8000
				31, // Tone/DTMF_detection
			], [
				18, // Record_A-law
				15, // Record_to_rate_8000
				26, // Silence_elimination
			], [
				3, // Play_A-law
				0, // Play_from_rate_8000
				13, // Play_AGC/volume/background
				11, // Slow_play
				31, // Tone/DTMF_detection
			], [
				3, // Play_A-law
				0, // Play_from_rate_8000
				13, // Play_AGC/volume/background
				12, // Fast_play
				31, // Tone/DTMF_detection
			], 
		],
		"Play prompts, record message, replay message, controlled by DTMF digits"
	),
	new UserTask(
		"-Voicemail with fast and slow replay", [
			[
				4, // Play_mu-law
				0, // Play_from_rate_8000
				31, // Tone/DTMF_detection
			], [
				19, // Record_mu-law
				15, // Record_to_rate_8000
				26, // Silence_elimination
			], [
				4, // Play_mu-law
				0, // Play_from_rate_8000
				13, // Play_AGC/volume/background
				11, // Slow_play
				31, // Tone/DTMF_detection
			], [
				4, // Play_mu-law
				0, // Play_from_rate_8000
				13, // Play_AGC/volume/background
				12, // Fast_play
				31, // Tone/DTMF_detection
			], 
		],
		"Play prompts, record message, replay message, controlled by DTMF digits"
	),
	new UserTask(
		"Send Fax", [
			[
				52, // FSK_demodulation
				47, // HDLC_decoder_(FSK_only)
			], [
				51, // FSK_modulation
				48, // HDLC_encoder
			], [
				53, // V.27ter_modulation
				45, // SYNC_encoder
			], [
				55, // V.29_modulation
				45, // SYNC_encoder
			], [
				57, // V.17_modulation
				45, // SYNC_encoder
			], 
		],
		"Send a fax using V.27ter, V.29, or V.17 depending on receiver capabilities"
	),
	new UserTask(
		"Receive Fax", [
			[
				52, // FSK_demodulation
				47, // HDLC_decoder_(FSK_only)
			], [
				51, // FSK_modulation
				48, // HDLC_encoder
			], [
				54, // V.27ter_demodulation
				43, // SYNC_decoder_(except_FSK)
			], [
				56, // V.29_demodulation
				43, // SYNC_decoder_(except_FSK)
			], 
		],
		"Receive a fax using V.27ter or V.29 depending on sender capabilities"
	),
	new UserTask(
		"+Auto select: for fax detection (no barge-in)", [
			[
				3, // Play_A-law
				0, // Play_from_rate_8000
				31, // Tone/DTMF_detection
			], 
		],
		"Auto detect fax or voice call"
	),
	new UserTask(
		"-Auto select: for fax detection (no barge-in)", [
			[
				4, // Play_mu-law
				0, // Play_from_rate_8000
				31, // Tone/DTMF_detection
			], 
		],
		"Auto detect fax or voice call"
	),
	new UserTask(
		"+Auto select: for fax detection (with barge-in)", [
			[
				3, // Play_A-law
				0, // Play_from_rate_8000
				31, // Tone/DTMF_detection
				18, // Record_A-law
				15, // Record_to_rate_8000
				35, // Echo_cancellation
			], 
		],
		"Auto detect fax or voice call"
	),
	new UserTask(
		"-Auto select: for fax detection (with barge-in)", [
			[
				4, // Play_mu-law
				0, // Play_from_rate_8000
				31, // Tone/DTMF_detection
				19, // Record_mu-law
				15, // Record_to_rate_8000
				35, // Echo_cancellation
			], 
		],
		"Auto detect fax or voice call"
	),
	new UserTask(
		"SMS messaging to fixed-line phones", [
			[
				52, // FSK_demodulation
				41, // ASYNC_decoder_(FSK_only)
			], [
				51, // FSK_modulation
				42, // ASYNC_encoder
			], 
		],
		"Interaction with fixed-line phones to provide short messages"
	),
];
g_UserTasksUnfilt.length -= bogus_extra_length;

var g_iInRes = 3;
var g_iOutRes = 4;
var g_iCPURes = 5;
var g_iRess = 6;
